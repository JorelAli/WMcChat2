{"version":3,"sources":["protodef.js"],"names":["require","getFieldInfo","tryCatch","reduce","get","Validator","isFieldInfo","type","Array","isArray","findArgs","acc","v","k","charAt","push","substr","concat","map","path","val","setField","into","c","split","reverse","length","pop","extendType","functions","defaultTypeArgs","json","JSON","stringify","argPos","produceArgs","typeArgs","args","parse","forEach","read","buffer","offset","context","call","write","value","sizeOf","ProtoDef","types","validator","addDefaultTypes","addTypes","protocolData","self","recursiveAddTypes","undefined","shift","validateProtocol","name","validate","addType","validateType","Object","keys","cursor","_fieldInfo","rootNodes","typeFunctions","Error","rootNode","packet","e","message","field","Buffer","size","data","metadata","slice","module","exports"],"mappings":"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","file":"../protodef.js","sourcesContent":["const { getFieldInfo, tryCatch } = require('./utils');\nconst reduce = require('lodash.reduce');\nconst get=require(\"lodash.get\");\nconst Validator=require('protodef-validator');\n\nfunction isFieldInfo(type) {\n  return typeof type === \"string\"\n    || (Array.isArray(type) && typeof type[0] === \"string\")\n    || type.type;\n}\n\nfunction findArgs(acc, v, k) {\n  if (typeof v === \"string\" && v.charAt(0) === '$')\n    acc.push({ \"path\": k, \"val\": v.substr(1) });\n  else if (Array.isArray(v) || typeof v === \"object\")\n    acc = acc.concat(reduce(v, findArgs, []).map((v) => ({ \"path\": k + \".\" + v.path, \"val\": v.val })));\n  return acc;\n}\n\nfunction setField(path, val, into) {\n  const c = path.split('.').reverse();\n  while (c.length > 1) {\n    into = into[c.pop()];\n  }\n  into[c.pop()] = val;\n}\n\nfunction extendType(functions, defaultTypeArgs) {\n  const json=JSON.stringify(defaultTypeArgs);\n  const argPos = reduce(defaultTypeArgs, findArgs, []);\n  function produceArgs(typeArgs) {\n    const args = JSON.parse(json);\n    argPos.forEach((v) => {\n      setField(v.path, typeArgs[v.val], args);\n    });\n    return args;\n  }\n  return [function read(buffer, offset, typeArgs, context) {\n    return functions[0].call(this, buffer, offset, produceArgs(typeArgs), context);\n  }, function write(value, buffer, offset, typeArgs, context) {\n    return functions[1].call(this, value, buffer, offset, produceArgs(typeArgs), context);\n  }, function sizeOf(value, typeArgs, context) {\n    if (typeof functions[2] === \"function\")\n      return functions[2].call(this, value, produceArgs(typeArgs), context);\n    else\n      return functions[2];\n  }];\n}\n\nclass ProtoDef\n{\n  constructor() {\n    this.types={};\n    this.validator=new Validator();\n    this.addDefaultTypes();\n  }\n\n  addDefaultTypes() {\n    this.addTypes(require(\"./datatypes/numeric\"));\n    this.addTypes(require(\"./datatypes/utils\"));\n    this.addTypes(require(\"./datatypes/structures\"));\n    this.addTypes(require(\"./datatypes/conditional\"));\n  }\n  \n  addProtocol(protocolData, path) {\n    const self=this;\n    function recursiveAddTypes(protocolData,path)\n    {\n      if(protocolData===undefined)\n        return;\n      if(protocolData.types)\n        self.addTypes(protocolData.types);\n      recursiveAddTypes(get(protocolData,path.shift()),path);\n    }\n\n    this.validator.validateProtocol(protocolData);\n\n    recursiveAddTypes(protocolData,path);\n  }\n\n  addType(name, functions, validate=true) {\n    if (functions === \"native\") {\n      this.validator.addType(name);\n      return;\n    }\n    if (isFieldInfo(functions)) {\n      if(validate)\n        this.validator.validateType(functions);\n      this.validator.addType(name);\n\n      let {type,typeArgs} = getFieldInfo(functions);\n      this.types[name] = typeArgs ? extendType(this.types[type], typeArgs) : this.types[type];\n    }\n    else {\n      if(functions[3]) {\n        this.validator.addType(name,functions[3]);\n      }\n      else\n        this.validator.addType(name);\n\n      this.types[name] = functions;\n    }\n  }\n\n  addTypes(types) {\n    Object.keys(types).forEach((name) => this.addType(name, types[name],false));\n    Object.keys(types).forEach((name) => {if (isFieldInfo(types[name])) {this.validator.validateType(types[name])}});\n  }\n\n  read(buffer, cursor, _fieldInfo, rootNodes) {\n    let {type,typeArgs} = getFieldInfo(_fieldInfo);\n    const typeFunctions = this.types[type];\n    if(!typeFunctions)\n      throw new Error(\"missing data type: \" + type);\n    return typeFunctions[0].call(this, buffer, cursor, typeArgs, rootNodes);\n  }\n\n  write(value, buffer, offset, _fieldInfo, rootNode) {\n    let {type,typeArgs} = getFieldInfo(_fieldInfo);\n    const typeFunctions = this.types[type];\n    if(!typeFunctions)\n      throw new Error(\"missing data type: \" + type);\n    return typeFunctions[1].call(this, value, buffer, offset, typeArgs, rootNode);\n  }\n\n  sizeOf(value, _fieldInfo, rootNode) {\n    let {type,typeArgs} = getFieldInfo(_fieldInfo);\n    const typeFunctions = this.types[type];\n    if(!typeFunctions) {\n      throw new Error(\"missing data type: \" + type);\n    }\n    if(typeof typeFunctions[2] === 'function') {\n      return typeFunctions[2].call(this, value, typeArgs, rootNode);\n    } else {\n      return typeFunctions[2];\n    }\n  }\n\n  createPacketBuffer(type,packet) {\n    const length=tryCatch(()=> this.sizeOf(packet, type, {}),\n      (e)=> {\n        e.message = `SizeOf error for ${e.field} : ${e.message}`;\n        throw e;\n      });\n    const buffer = new Buffer(length);\n    tryCatch(()=> this.write(packet, buffer, 0, type, {}),\n      (e)=> {\n        e.message = `Write error for ${e.field} : ${e.message}`;\n        throw e;\n      });\n    return buffer;\n  }\n\n  parsePacketBuffer(type,buffer) {\n    const {value,size}=tryCatch(()=> this.read(buffer, 0, type, {}),\n      (e) => {\n        e.message=`Read error for ${e.field} : ${e.message}`;\n        throw e;\n      });\n    return {\n      data: value,\n      metadata:{\n        size:size\n      },\n      buffer:buffer.slice(0,size)\n    };\n  }\n}\n\nmodule.exports = ProtoDef;\n"]}