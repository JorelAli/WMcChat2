{"version":3,"sources":["datatypes/numeric.js"],"names":["require","PartialReadError","readI64","buffer","offset","length","value","readInt32BE","size","writeI64","writeInt32BE","readLI64","readInt32LE","writeLI64","writeInt32LE","readU64","readUInt32BE","writeU64","writeUInt32BE","readLU64","readUInt32LE","writeLU64","writeUInt32LE","generateFunctions","bufferReader","bufferWriter","reader","writer","nums","types","Object","keys","reduce","num","module","exports"],"mappings":"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","file":"../../datatypes/numeric.js","sourcesContent":["var { PartialReadError} = require('../utils');\n\nfunction readI64(buffer, offset) {\n  if(offset + 8 > buffer.length)\n    throw new PartialReadError();\n  return {\n    value: [buffer.readInt32BE(offset), buffer.readInt32BE(offset + 4)],\n    size: 8\n  };\n}\n\nfunction writeI64(value, buffer, offset) {\n  buffer.writeInt32BE(value[0], offset);\n  buffer.writeInt32BE(value[1], offset + 4);\n  return offset + 8;\n}\n\nfunction readLI64(buffer, offset) {\n  if(offset + 8 > buffer.length)\n    throw new PartialReadError();\n  return {\n    value: [buffer.readInt32LE(offset+4), buffer.readInt32LE(offset)],\n    size: 8\n  };\n}\n\nfunction writeLI64(value, buffer, offset) {\n  buffer.writeInt32LE(value[0], offset+4);\n  buffer.writeInt32LE(value[1], offset);\n  return offset + 8;\n}\n\nfunction readU64(buffer, offset) {\n  if(offset + 8 > buffer.length)\n    throw new PartialReadError();\n  return {\n    value: [buffer.readUInt32BE(offset), buffer.readUInt32BE(offset + 4)],\n    size: 8\n  };\n}\n\nfunction writeU64(value, buffer, offset) {\n  buffer.writeUInt32BE(value[0], offset);\n  buffer.writeUInt32BE(value[1], offset + 4);\n  return offset + 8;\n}\n\nfunction readLU64(buffer, offset) {\n  if(offset + 8 > buffer.length)\n    throw new PartialReadError();\n  return {\n    value: [buffer.readUInt32LE(offset+4), buffer.readUInt32LE(offset)],\n    size: 8\n  };\n}\n\nfunction writeLU64(value, buffer, offset) {\n  buffer.writeUInt32LE(value[0], offset+4);\n  buffer.writeUInt32LE(value[1], offset);\n  return offset + 8;\n}\n\nfunction generateFunctions(bufferReader,bufferWriter,size)\n{\n  var reader=function(buffer, offset)\n  {\n    if(offset + size > buffer.length)\n      throw new PartialReadError();\n    var value = buffer[bufferReader](offset);\n    return {\n      value: value,\n      size: size\n    };\n  };\n  var writer=function(value, buffer, offset) {\n    buffer[bufferWriter](value, offset);\n    return offset + size;\n  };\n  return [reader, writer, size];\n}\n\nvar nums= {\n  'i8': [\"readInt8\", \"writeInt8\", 1],\n  'u8': [\"readUInt8\", \"writeUInt8\", 1],\n  'i16': [\"readInt16BE\", \"writeInt16BE\", 2],\n  'u16': [\"readUInt16BE\", \"writeUInt16BE\", 2],\n  'i32': [\"readInt32BE\", \"writeInt32BE\", 4],\n  'u32': [\"readUInt32BE\", \"writeUInt32BE\", 4],\n  'f32': [\"readFloatBE\", \"writeFloatBE\", 4],\n  'f64': [\"readDoubleBE\", \"writeDoubleBE\", 8],\n  'li8': [\"readInt8\", \"writeInt8\", 1],\n  'lu8': [\"readUInt8\", \"writeUInt8\", 1],\n  'li16': [\"readInt16LE\", \"writeInt16LE\", 2],\n  'lu16': [\"readUInt16LE\", \"writeUInt16LE\", 2],\n  'li32': [\"readInt32LE\", \"writeInt32LE\", 4],\n  'lu32': [\"readUInt32LE\", \"writeUInt32LE\", 4],\n  'lf32': [\"readFloatLE\", \"writeFloatLE\", 4],\n  'lf64': [\"readDoubleLE\", \"writeDoubleLE\", 8]\n};\n\nvar types=Object.keys(nums).reduce(function(types,num){\n  types[num]=generateFunctions(nums[num][0], nums[num][1], nums[num][2]);\n  return types;\n},{});\ntypes[\"i64\"]=[readI64, writeI64, 8];\ntypes[\"li64\"]=[readLI64, writeLI64, 8];\ntypes[\"u64\"]=[readU64, writeU64, 8];\ntypes[\"lu64\"]=[readLU64, writeLU64, 8];\n\n\nmodule.exports = types;\n"]}