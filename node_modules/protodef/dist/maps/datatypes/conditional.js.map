{"version":3,"sources":["datatypes/conditional.js"],"names":["require","getField","getFieldInfo","tryDoc","PartialReadError","module","exports","readSwitch","writeSwitch","sizeOfSwitch","readOption","writeOption","sizeOfOption","buffer","offset","rootNode","compareTo","fields","compareToValue","rest","undefined","default","Error","caseDefault","resultingType","fieldInfo","read","value","write","sizeOf","typeArgs","context","length","val","readUInt8","retval","size","writeUInt8"],"mappings":"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","file":"../../datatypes/conditional.js","sourcesContent":["var { getField, getFieldInfo, tryDoc, PartialReadError} = require('../utils');\n\nmodule.exports = {\n  'switch': [readSwitch, writeSwitch, sizeOfSwitch,require('../../ProtoDef/schemas/switch')],\n  'option': [readOption, writeOption, sizeOfOption,require('../../ProtoDef/schemas/option')]\n};\n\nfunction readSwitch(buffer, offset, {compareTo,fields,compareToValue,...rest}, rootNode) {\n  compareTo = compareToValue!==undefined ? compareToValue : getField(compareTo, rootNode);\n  if (typeof fields[compareTo] === 'undefined' && typeof rest.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n\n  var caseDefault=typeof fields[compareTo] === 'undefined';\n  var resultingType = caseDefault ? rest.default : fields[compareTo];\n  var fieldInfo = getFieldInfo(resultingType);\n  return tryDoc(() => this.read(buffer, offset, fieldInfo, rootNode),caseDefault ? \"default\" : compareTo);\n}\n\nfunction writeSwitch(value, buffer, offset, {compareTo,fields,compareToValue,...rest}, rootNode) {\n  compareTo = compareToValue!==undefined ? compareToValue : getField(compareTo, rootNode);\n  if (typeof fields[compareTo] === 'undefined' && typeof rest.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n\n  var caseDefault=typeof fields[compareTo] === 'undefined';\n  var fieldInfo = getFieldInfo(caseDefault ? rest.default : fields[compareTo]);\n  return tryDoc(() => this.write(value, buffer, offset, fieldInfo, rootNode),caseDefault ? \"default\" : compareTo);\n}\n\nfunction sizeOfSwitch(value, {compareTo,fields,compareToValue,...rest}, rootNode) {\n  compareTo = compareToValue!==undefined ? compareToValue : getField(compareTo, rootNode);\n  if (typeof fields[compareTo] === 'undefined' && typeof rest.default === \"undefined\")\n    throw new Error(compareTo + \" has no associated fieldInfo in switch\");\n\n  var caseDefault=typeof fields[compareTo] === 'undefined';\n  var fieldInfo = getFieldInfo(caseDefault ? rest.default : fields[compareTo]);\n  return tryDoc(() => this.sizeOf(value, fieldInfo, rootNode),caseDefault ? \"default\" : compareTo);\n}\n\nfunction readOption(buffer, offset, typeArgs, context) {\n  if(buffer.length<offset+1)\n    throw new PartialReadError();\n  var val = buffer.readUInt8(offset++);\n  if (val !== 0) {\n    var retval = this.read(buffer, offset, typeArgs, context);\n    retval.size++;\n    return retval;\n  }\n  else\n    return {size: 1};\n}\n\nfunction writeOption(value, buffer, offset, typeArgs, context) {\n  if (value != null) {\n    buffer.writeUInt8(1, offset++);\n    offset=this.write(value, buffer, offset, typeArgs, context);\n  }\n  else\n    buffer.writeUInt8(0, offset++);\n  return offset;\n}\n\nfunction sizeOfOption(value, typeArgs, context) {\n  return value == null ? 1 : this.sizeOf(value, typeArgs, context) + 1;\n}\n"]}